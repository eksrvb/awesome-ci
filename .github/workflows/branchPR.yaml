name: Build PR

on:
  pull_request:

jobs:
  generate-infos:
    uses: fullstack-devops/git-workflows/.github/workflows/generate-build-infos.yml@main
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}

  quality-gate:
    runs-on: ubuntu-latest
    needs: [generate-infos]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Test
        run: make test/cover
      - name: Audit
        run: make audit

      - name: debugging git
        run: |
          echo "git name-rev HEAD: $(git name-rev HEAD)"
          echo "git log -1 --pretty=format:"%s": $(git log -1 --pretty=format:"%s")"
          echo "git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@': $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')"

  build:
    runs-on: ubuntu-latest
    needs: [generate-infos, quality-gate]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Build
        run: make
        env:
          VERSION: "${{ needs.generate-infos.outputs.version }}"

      - name: Setup UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true
      - name: Compress binaries with upx
        run: make upx
        env:
          VERSION: "${{ needs.generate-infos.outputs.version }}"

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: awesome-ci-binaries
          path: |
            build/package/awesome-ci_*

      - name: (integration testing) test build Infos
        run: build/package/awesome-ci_${{ needs.generate-infos.outputs.version }}_linux-amd64 pr info -n ${{ github.event.pull_request.number }} -v > $GITHUB_STEP_SUMMARY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: (integration testing) test env file
        run: export | grep ACI_
