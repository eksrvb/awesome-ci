name: Build PR

on:
  pull_request:
    branches-ignore:
      - "docu/**"
    paths-ignore:
      - "README.md"
      - "docu/**"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/PULL_REQUEST_TEMPLATE.md"

jobs:
  generate_infos:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.tag.outputs.version }}
      pr: ${{ steps.tag.outputs.pr }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Setup awesome-ci
        uses: fullstack-devops/awesome-ci-action@main

      - name: collect infos
        run: awesome-ci pr info -number ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: export infos
        id: tag
        shell: bash
        run: |
          echo "::set-output name=version::$ACI_VERSION"
          echo "::set-output name=pr::$ACI_PR"

  build:
    runs-on: ubuntu-latest
    needs: generate_infos
    strategy:
      matrix:
        arch: ["amd64", "arm64"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Setup awesome-ci
        uses: fullstack-devops/awesome-ci-action@main

      - name: debugging git
        run: |
          echo "git name-rev HEAD: $(git name-rev HEAD)"
          echo "git log -1 --pretty=format:"%s": $(git log -1 --pretty=format:"%s")"
          echo "git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@': $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')"
      - name: set build Infos
        run: awesome-ci pr info -number ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build "${{ matrix.arch }}"
        run: go build -v -ldflags "-X main.version=${{ needs.generate_infos.outputs.version }}" -o out/awesome-ci_${{ needs.generate_infos.outputs.version }}_${{ matrix.arch }}
        env:
          GOOS: linux
          GOARCH: "${{ matrix.arch }}"

      - name: Cache build outputs
        uses: actions/cache@v2
        env:
          cache-name: cache-outputs-modules
        with:
          path: out/
          key: awesome-ci-${{ github.event.pull_request.head.sha }}-${{ hashFiles('out/awesome-ci*') }}
          restore-keys: |
            awesome-ci-${{ github.event.pull_request.head.sha }}

      #- name: Integration testing
      #  run: ./tools/test.sh ./out/awesome-ci_${ACI_NEXT_VERSION}_${{ matrix.arch }}
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_release_test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup awesome-ci
        uses: fullstack-devops/awesome-ci-action@main

      - name: get cached build outputs
        uses: actions/cache@v2
        env:
          cache-name: cache-outputs-modules
        with:
          path: out/
          key: awesome-ci-${{ github.event.pull_request.head.sha }}

      - name: get generated artifacts
        working-directory: out
        run: ls -la
