name: Build PR

on:
  pull_request:
    branches-ignore:
      - "docu/**"
    paths-ignore:
      - "README.md"
      - "docu/**"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/PULL_REQUEST_TEMPLATE.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Set up awesome-ci
        run: |
          wget https://github.com/eksrvb/awesome-ci/releases/latest/download/awesome-ci
          chmod +x awesome-ci
      - name: debugging git
        run: |
          echo "git name-rev HEAD: $(git name-rev HEAD)"
          echo "git log -1 --pretty=format:"%s": $(git log -1 --pretty=format:"%s")"
          echo "git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@': $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')"
      - name: set build Infos
        run: |
          ./awesome-ci getBuildInfos
          export | grep "ACI_"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build amd64
        run: go build -v -ldflags "-X main.version=$ACI_NEXT_VERSION" -o out/awesome-ci
        env:
          GOOS: linux
          GOARCH: amd64
      - name: Build arm64
        run: go build -v -ldflags "-X main.version=$ACI_NEXT_VERSION" -o out/awesome-ci-arm64
        env:
          GOOS: linux
          GOARCH: arm64
      - name: Print version of awesome-ci
        run: ./out/awesome-ci -version
      - name: Integration testing
        run: ./tools/test.sh ./out/awesome-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test writing dummy Release
        run: ./out/awesome-ci createRelease -patchLevel bugfix -dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
